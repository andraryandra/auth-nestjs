var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.144,1,2.287]],["body/classes/AllExceptionsFilter.html",[0,0.193,1,3.05,2,0.987,3,0.224,4,0.195,5,0.195,6,2.46,7,3.853,8,4.41,9,0.317,10,1.452,11,3.144,12,3.853,13,3.884,14,4.754,15,0.419,16,3.299,17,1.2,18,0.026,19,0.71,20,0.419,21,0.925,22,4.41,23,1.053,24,3.299,25,0.309,26,3.884,27,1.847,28,0.76,29,3.853,30,2.013,31,0.309,32,2.182,33,1.706,34,3.884,35,2.03,36,3.491,37,4.542,38,0.914,39,4.187,40,1.276,41,1.847,42,2.793,43,3.853,44,3.853,45,3.853,46,3.853,47,1.452,48,2.793,49,1.282,50,2.451,51,2.793,52,2.793,53,2.793,54,1.774,55,3.853,56,2.793,57,2.793,58,2.793,59,2.46,60,2.211,61,2.793,62,1.2,63,2.793,64,2.793,65,0.016,66,0.016]],["title/controllers/AppController.html",[67,1.327,68,2.287]],["body/controllers/AppController.html",[0,0.193,3,0.309,4,0.269,5,0.269,9,0.438,10,1.795,15,0.58,18,0.025,23,1.456,25,0.382,28,1.05,31,0.309,38,1.13,47,1.456,65,0.02,66,0.02,67,2.186,68,3.769,69,1.897,70,3.862,71,5.389,72,1.122,73,4.561,74,3.414,75,3.862,76,2.782,77,2.358,78,4.561]],["title/modules/AppModule.html",[79,1.522,80,2.287]],["body/modules/AppModule.html",[0,0.148,3,0.238,4,0.207,5,0.207,18,0.025,25,0.448,28,0.807,31,0.238,34,2.613,65,0.017,66,0.017,68,3.602,69,1.973,74,3.473,75,2.967,79,2.397,80,4.504,81,1.812,82,1.812,83,2.138,84,2.138,85,1.812,86,3.279,87,2.138,88,2.967,89,2.967,90,2.967,91,3.784,92,3.784,93,3.784,94,2.893,95,2.138,96,2.138,97,3.504,98,3.178,99,3.504,100,2.349,101,1.563,102,3.504,103,3.504,104,3.504,105,3.504,106,2.967,107,2.967,108,2.967,109,3.504,110,3.504,111,3.504,112,3.504,113,3.504,114,3.504,115,3.504,116,3.504]],["title/injectables/AppService.html",[74,1.911,117,1.162]],["body/injectables/AppService.html",[0,0.201,3,0.323,4,0.281,5,0.281,9,0.456,10,1.841,15,0.604,18,0.025,23,1.517,25,0.323,28,1.094,31,0.323,38,1.159,47,1.517,65,0.021,66,0.021,71,5.466,74,3.229,117,1.964,118,2.457,119,4.024,120,4.753,121,4.753,122,4.753]],["title/controllers/AuthController.html",[67,1.327,123,2.287]],["body/controllers/AuthController.html",[0,0.079,3,0.127,4,0.111,5,0.327,9,0.18,10,0.952,11,1.049,15,0.539,17,1.543,18,0.026,19,0.913,20,0.683,21,1.189,23,1.354,25,0.393,27,1.049,28,0.431,30,1.143,31,0.127,32,0.898,35,2.397,38,0.376,41,1.049,47,1.354,49,1.649,50,2.362,54,0.638,62,1.353,65,0.011,66,0.011,67,0.728,69,0.779,72,1.044,76,1.143,123,2,124,1.586,125,1.256,126,1.874,127,2.631,128,3.712,129,2.527,130,4.178,131,2.527,132,1.874,133,3.149,134,1.874,135,1.586,136,1.874,137,1.874,138,3.47,139,1.586,140,2.588,141,2.984,142,1.874,143,1.874,144,1.397,145,1.397,146,1.353,147,1.874,148,1.874,149,1.586,150,2.588,151,2.984,152,1.874,153,2.225,154,1.397,155,1.256,156,2.527,157,1.256,158,2.527,159,2.083,160,1.586,161,1.586,162,2.527,163,1.586,164,1.586,165,1.397,166,1.256,167,2.527,168,1.586,169,2.225,170,1.256,171,0.525,172,2,173,1.874,174,0.969,175,1.874,176,1.586,177,1.256,178,1.874,179,1.397,180,1.586,181,1.874,182,1.874,183,1.874,184,1.874,185,2.366,186,1.874,187,1.874,188,1.874,189,1.874,190,2,191,2,192,1.874,193,1.874,194,3.149,195,2.984,196,1.874,197,1.874,198,1.586,199,1.586,200,1.397,201,0.461,202,1.586,203,1.586,204,1.397,205,2.527,206,2.527,207,2.527,208,1.874,209,1.586,210,1.586,211,1.874,212,3.149,213,3.149,214,2.527,215,1.586,216,1.586,217,1.586,218,2.527,219,1.586,220,1.586,221,2.527,222,1.586,223,3.149,224,1.586,225,1.586,226,1.586,227,0.779,228,1.586,229,1.256,230,1.049,231,1.586,232,1.586,233,2.527,234,1.397,235,1.586,236,1.874,237,1.874,238,2.984,239,1.874,240,1.874,241,1.874,242,1.874,243,2,244,1.874,245,1.586,246,2.083,247,3.149,248,1.874,249,1.256,250,1.586,251,3.105,252,2.527,253,2.527,254,1.586,255,1.874,256,1.874,257,1.397]],["title/classes/AuthGuard.html",[0,0.144,174,1.764]],["body/classes/AuthGuard.html",[0,0.171,2,1.209,3,0.274,4,0.239,5,0.239,9,0.388,10,1.663,15,0.662,17,1.895,18,0.025,19,1.121,20,0.514,21,1.461,23,1.663,25,0.354,28,0.93,31,0.274,47,1.663,62,1.47,65,0.019,66,0.019,174,2.981,243,4.226,251,3.865,258,3.421,259,3.492,260,5.21,261,5.21,262,5.21,263,5.21,264,6.091,265,4.041,266,4.041,267,5.21,268,4.041,269,5.21,270,4.041,271,2.708,272,4.041,273,2.263]],["title/modules/AuthModule.html",[79,1.522,91,2.082]],["body/modules/AuthModule.html",[0,0.154,3,0.247,4,0.215,5,0.215,18,0.025,25,0.447,28,0.838,31,0.247,65,0.017,66,0.017,69,2.023,79,2.443,81,1.881,82,1.881,83,2.219,84,2.219,85,1.881,86,3.342,87,2.219,91,3.969,94,2.966,95,2.219,96,2.219,98,2.438,100,2.438,101,1.623,123,3.671,159,3.511,160,3.08,230,2.037,243,2.438,271,2.438,274,3.08,275,3.08,276,3.825,277,3.638,278,3.638,279,3.638,280,3.638,281,2.713,282,2.219,283,2.713,284,3.638,285,2.219,286,3.08,287,3.638,288,3.638,289,3.638,290,2.713,291,3.638,292,3.638,293,3.638,294,2.713,295,2.713,296,3.638,297,3.08,298,3.08]],["title/injectables/AuthService.html",[117,1.162,159,1.911]],["body/injectables/AuthService.html",[0,0.076,3,0.122,4,0.106,5,0.106,9,0.172,10,0.92,11,1.005,15,0.647,17,1.851,18,0.026,19,1.095,20,0.647,21,1.427,23,1.624,25,0.38,26,2.15,27,1.005,28,0.413,31,0.122,33,1.491,35,2.16,37,2.15,39,2.15,40,1.531,41,1.615,47,1.545,49,1.762,50,2.271,62,1.851,65,0.01,66,0.01,101,0.801,117,0.982,118,0.928,127,2.712,128,3.756,129,3.06,130,2.442,131,3.505,139,2.442,140,2.525,149,2.442,150,2.525,159,1.615,161,1.52,176,1.52,179,1.338,185,2.686,194,2.442,227,1.722,243,3.66,245,1.52,246,1.005,247,1.52,249,1.203,251,1.933,252,1.52,253,1.52,254,2.442,273,2.849,281,1.338,282,1.095,283,1.338,285,1.095,286,1.52,294,1.338,295,1.338,297,1.52,298,1.52,299,1.52,300,2.884,301,2.884,302,1.795,303,2.525,304,5.089,305,1.795,306,2.884,307,2.884,308,1.795,309,1.52,310,2.884,311,1.795,312,1.795,313,2.884,314,1.795,315,4.534,316,1.795,317,2.884,318,1.795,319,1.203,320,0.801,321,1.795,322,1.795,323,1.52,324,1.795,325,1.795,326,1.933,327,4.534,328,1.191,329,4.534,330,2.14,331,4.139,332,1.203,333,4.534,334,2.423,335,1.795,336,1.795,337,1.795,338,1.795,339,1.795,340,1.52,341,3.615,342,1.795,343,1.338,344,2.024,345,1.795,346,2.884,347,1.795,348,1.795,349,3.615,350,1.795,351,1.795,352,1.795,353,1.795,354,1.795,355,1.795,356,1.795,357,1.795,358,1.795,359,1.52,360,1.795,361,1.795,362,1.795,363,1.795,364,1.52,365,1.095,366,1.795,367,1.795]],["title/controllers/CategoriesController.html",[67,1.327,368,2.287]],["body/controllers/CategoriesController.html",[0,0.095,3,0.152,4,0.132,5,0.132,9,0.215,10,1.096,15,0.641,17,1.701,18,0.025,19,1.007,20,0.784,21,1.312,23,1.609,25,0.388,27,1.256,28,0.516,31,0.152,32,1.075,35,2.548,38,1.177,41,2.619,47,1.609,49,1.96,50,2.098,54,1.593,62,1.834,65,0.012,66,0.012,67,0.872,69,0.933,72,1.241,76,1.368,77,1.16,125,1.503,127,2.84,144,3.488,145,3.488,146,2.077,154,2.561,155,2.302,157,1.503,166,1.503,169,3.761,170,1.503,171,0.629,174,1.16,177,1.503,185,2.418,190,1.503,191,1.503,246,1.256,257,1.673,328,1.455,330,1.776,332,1.503,343,1.673,365,2.547,368,2.302,369,1.899,370,3.534,371,1.923,372,2.854,373,2.302,374,2.302,375,2.243,376,3.1,377,3.917,378,2.243,379,2.243,380,2.243,381,2.243,382,1.673,383,2.243,384,2.243,385,1.673,386,2.908,387,2.243,388,1.673,389,3.572,390,2.243,391,2.243,392,1.899,393,2.337,394,1.899,395,1.503,396,2.561,397,1.503,398,1.899,399,2.798,400,2.243,401,2.243,402,2.243,403,1.899,404,2.243,405,4.678,406,2.243,407,2.243,408,1.673,409,1.899,410,2.243,411,1.899,412,1.673,413,2.243,414,1.899,415,2.243,416,1.673]],["title/modules/CategoriesModule.html",[79,1.522,92,2.082]],["body/modules/CategoriesModule.html",[0,0.179,3,0.286,4,0.249,5,0.249,18,0.025,25,0.434,28,0.972,31,0.286,65,0.019,66,0.019,69,2.228,79,2.625,81,2.181,82,2.181,83,2.574,84,2.574,85,2.181,86,3.59,87,2.574,92,3.983,94,3.268,95,2.574,96,2.574,98,2.828,100,2.828,101,1.882,368,3.944,393,3.656,394,3.572,417,3.572,418,3.572,419,4.219,420,4.219,421,2.363,422,3.572,423,4.219]],["title/injectables/CategoriesService.html",[117,1.162,393,1.911]],["body/injectables/CategoriesService.html",[0,0.107,3,0.171,4,0.149,5,0.149,9,0.242,10,1.196,15,0.706,17,1.928,18,0.026,19,1.141,20,0.674,21,1.486,23,1.692,25,0.377,28,0.579,31,0.171,33,1.937,35,2.365,40,1.695,47,1.692,49,2.061,50,2.206,62,1.628,65,0.013,66,0.013,77,1.301,101,1.122,117,1.276,118,1.301,127,2.9,138,1.686,185,2.76,227,1.047,273,2.506,303,3.025,319,1.686,320,1.122,326,2.511,328,1.303,330,2.314,365,2.285,370,3.172,371,2.098,372,3.025,373,2.511,374,2.511,376,2.776,377,3.609,389,3.025,393,2.098,395,1.686,396,2.794,397,1.686,421,1.409,422,2.13,424,2.13,425,2.516,426,2.516,427,3.746,428,3.172,429,2.516,430,2.516,431,3.746,432,2.516,433,5.558,434,3.746,435,2.516,436,3.746,437,2.516,438,1.686,439,2.516,440,2.13,441,2.516,442,3.746,443,2.516,444,2.13,445,2.13,446,4.476,447,4.476,448,2.516,449,2.13,450,2.516]],["title/classes/CategoryDtoOut.html",[0,0.144,399,2.287]],["body/classes/CategoryDtoOut.html",[0,0.162,2,1.145,3,0.26,4,0.226,5,0.226,9,0.368,15,0.808,18,0.025,19,1.209,20,0.808,25,0.26,31,0.26,38,1.199,40,1.41,54,1.913,65,0.018,66,0.018,72,1.565,146,2.043,171,1.073,201,1.238,328,1.476,399,3.372,451,3.242,452,3.146,453,3.146,454,3.341,455,3.019,456,3.829,457,3.829,458,3.427,459,3.829,460,3.829,461,2.817,462,3.829,463,3.829]],["title/entities/CategoryEntity.html",[421,1.911,464,1.522]],["body/entities/CategoryEntity.html",[0,0.136,3,0.218,4,0.189,5,0.189,9,0.308,15,0.803,18,0.025,19,1.104,20,0.815,21,1.251,25,0.303,31,0.218,38,1.115,40,1.251,54,1.747,65,0.016,66,0.016,72,1.554,146,1.866,201,1.097,227,2.307,230,2.497,320,1.43,328,1.348,421,2.497,452,2.872,453,2.872,454,3.38,461,3.106,464,1.43,465,1.795,466,2.714,467,3.825,468,3.825,469,3.825,470,3.205,471,4.343,472,3.205,473,2.39,474,3.205,475,3.439,476,3.205,477,2.39,478,3.205,479,2.867,480,2.714,481,2.138,482,4.46,483,3.205,484,2.39,485,2.721,486,3.205,487,3.825,488,3.205,489,3.205,490,3.718,491,3.776,492,3.205,493,2.39,494,2.39]],["title/classes/CreateCategoryDto.html",[0,0.144,376,1.911]],["body/classes/CreateCategoryDto.html",[0,0.182,2,1.289,3,0.292,4,0.254,5,0.254,9,0.414,15,0.755,18,0.025,19,1.279,20,0.755,25,0.292,31,0.292,38,1.253,54,2.023,65,0.02,66,0.02,72,1.462,146,2.161,171,1.208,201,1.335,376,3.038,455,2.972,461,3.038,495,5.28,496,3.212,497,4.307,498,4.307,499,4.307]],["title/classes/CreateProductDto.html",[0,0.144,500,1.911]],["body/classes/CreateProductDto.html",[0,0.159,2,1.124,3,0.255,4,0.222,5,0.222,9,0.361,15,0.804,18,0.025,19,1.198,20,0.804,25,0.255,31,0.255,38,1.19,40,1.774,54,1.896,65,0.018,66,0.018,72,1.557,146,2.025,171,1.054,201,1.223,455,3.047,461,2.783,500,2.783,501,5.465,502,2.803,503,4.152,504,3.732,505,3.732,506,3.759,507,3.759,508,3.759,509,3.759,510,3.759,511,3.759]],["title/injectables/JwtStrategy.html",[117,1.162,276,2.082]],["body/injectables/JwtStrategy.html",[0,0.168,3,0.269,4,0.234,5,0.234,9,0.381,10,1.642,15,0.654,17,1.441,18,0.025,19,0.853,20,0.504,21,1.111,23,1.265,25,0.41,28,0.913,31,0.269,33,2.953,47,1.265,49,1.541,65,0.018,66,0.018,117,1.752,118,2.049,127,2.548,230,2.219,259,3.449,271,2.656,276,3.139,282,2.418,283,2.955,290,4.26,295,2.955,309,3.356,328,1.041,344,2.219,512,3.356,513,5.145,514,5.145,515,3.963,516,5.145,517,3.963,518,3.963,519,3.963,520,3.963,521,3.356,522,3.963,523,3.963,524,3.963,525,3.963,526,3.963,527,3.963,528,3.963,529,3.356,530,3.963]],["title/classes/LoginDto.html",[0,0.144,140,2.082]],["body/classes/LoginDto.html",[0,0.231,2,1.302,3,0.295,4,0.257,5,0.257,9,0.418,15,0.694,18,0.025,20,0.694,25,0.371,31,0.295,38,1.258,65,0.02,66,0.02,72,1.344,140,3.332,171,1.22,201,1.344,344,3.343,455,2.663,531,3.685,532,4.001,533,4.353,534,4.353,535,4.353,536,4.353,537,4.625,538,5.054,539,3.685,540,3.685,541,3.246,542,4.353,543,3.685]],["title/classes/ProductDtoOut.html",[0,0.144,544,2.287]],["body/classes/ProductDtoOut.html",[0,0.145,2,1.022,3,0.232,4,0.202,5,0.202,9,0.328,15,0.826,18,0.025,19,1.142,20,0.826,25,0.232,31,0.232,38,1.145,40,1.798,54,1.807,65,0.017,66,0.017,72,1.6,146,1.93,171,0.958,201,1.147,328,1.394,452,2.971,453,2.971,454,3.191,455,3.064,458,3.237,461,2.61,503,3.956,504,3.556,505,3.556,544,3.125,545,2.893,546,3.417,547,3.417,548,3.417,549,3.417,550,3.417,551,3.417,552,3.417,553,3.417,554,3.417]],["title/entities/ProductEntity.html",[464,1.522,479,1.764]],["body/entities/ProductEntity.html",[0,0.108,3,0.172,4,0.15,5,0.15,9,0.244,15,0.805,18,0.025,19,1.073,20,0.828,21,1.058,25,0.306,31,0.172,38,1.001,40,1.664,54,1.534,65,0.014,66,0.014,72,1.559,146,1.638,201,0.929,227,2.073,230,2.114,234,2.815,320,1.134,328,1.183,377,3.248,421,2.79,452,2.521,453,2.521,454,3.124,461,2.79,464,1.134,465,1.423,467,3.358,469,3.358,471,3.812,473,1.895,475,3.018,477,1.895,479,1.951,480,2.152,481,1.219,484,3.358,485,2.303,487,3.358,490,3.977,491,3.196,493,1.895,494,1.895,503,3.97,504,3.018,505,3.018,555,2.152,556,3.018,557,2.152,558,2.542,559,2.542,560,2.542,561,2.542,562,2.542,563,2.542,564,2.542,565,2.542,566,3.775,567,3.775,568,3.775,569,3.775,570,2.542,571,2.79,572,1.951,573,3.775,574,2.542,575,2.542,576,3.775,577,2.542,578,2.542,579,3.812,580,3.196,581,1.895,582,2.542,583,2.542,584,2.542,585,2.542,586,2.152,587,2.542,588,2.542,589,2.542,590,2.542,591,2.542,592,2.542,593,2.542,594,2.542]],["title/controllers/ProductImagesController.html",[67,1.327,595,2.287]],["body/controllers/ProductImagesController.html",[0,0.086,3,0.138,4,0.12,5,0.336,9,0.196,10,1.019,11,1.142,15,0.5,17,1.43,18,0.026,19,0.846,20,0.65,21,1.102,23,1.255,25,0.376,28,0.47,30,1.245,31,0.138,32,0.978,35,0.91,38,1.075,47,1.255,49,1.528,50,2.368,60,1.367,62,1.756,65,0.011,66,0.011,67,0.793,69,0.849,72,0.967,76,1.245,77,1.055,125,1.367,127,2.538,133,3.329,135,1.727,138,2.139,146,0.742,153,2.38,155,1.367,156,2.702,157,1.367,158,2.702,162,2.702,163,1.727,164,1.727,165,1.521,166,1.367,167,2.702,168,1.727,170,1.367,171,0.572,174,1.055,177,1.367,185,1.885,190,1.367,191,1.367,198,2.702,199,1.727,200,1.521,201,0.502,202,1.727,203,1.727,204,1.521,205,2.702,206,2.702,207,2.702,209,1.727,210,1.727,212,3.329,213,3.329,214,2.702,215,1.727,216,1.727,217,1.727,218,2.702,219,1.727,220,1.727,221,2.702,222,1.727,223,3.329,224,1.727,225,1.727,226,1.727,227,0.849,228,1.727,229,1.367,230,1.142,231,1.727,232,1.727,233,2.702,234,1.521,235,1.727,246,1.787,249,1.367,273,1.787,328,1.454,330,1.055,332,1.367,408,2.38,412,1.521,416,1.521,481,2.454,556,1.367,572,2.496,595,2.139,596,3.316,597,2.981,598,1.727,599,2.04,600,2.702,601,3.192,602,3.329,603,2.04,604,3.192,605,2.04,606,2.04,607,2.49,608,2.04,609,2.702,610,2.04,611,2.04,612,2.04,613,2.04,614,2.202,615,1.727,616,2.04,617,1.787,618,1.727,619,1.727,620,1.727,621,3.765,622,2.04,623,2.04,624,2.04,625,2.04,626,2.04,627,2.04,628,2.04,629,2.04,630,2.04,631,2.04,632,2.04,633,2.04,634,2.04,635,2.04,636,3.192,637,3.192,638,2.04,639,1.727,640,1.245,641,2.04,642,2.04,643,2.04,644,2.04,645,2.04,646,2.04,647,2.04,648,1.727,649,2.04,650,2.04,651,2.04,652,1.727,653,1.727]],["title/classes/ProductImagesDtoIn.html",[0,0.144,617,1.911]],["body/classes/ProductImagesDtoIn.html",[0,0.225,2,1.245,3,0.282,4,0.246,5,0.246,9,0.4,15,0.675,18,0.025,20,0.809,25,0.282,31,0.36,38,1.238,40,1.824,65,0.019,66,0.019,72,1.307,171,1.167,201,1.307,328,1.094,455,2.838,458,3.757,572,3.023,607,2.331,617,2.973,640,3.757,654,4.361,655,3.104,656,4.163,657,4.163,658,3.104]],["title/classes/ProductImagesDtoOut.html",[0,0.144,607,1.911]],["body/classes/ProductImagesDtoOut.html",[0,0.218,2,1.189,3,0.27,4,0.235,5,0.235,9,0.382,15,0.727,18,0.025,20,0.817,25,0.27,31,0.35,38,1.26,40,1.879,65,0.019,66,0.019,72,1.408,171,1.115,201,1.269,328,1.503,455,2.552,458,3.693,572,2.056,607,2.887,617,2.226,640,3.693,654,4.514,655,2.965,658,4.267,659,5.721,660,3.976,661,3.976,662,3.976]],["title/entities/ProductImagesEntity.html",[464,1.522,571,1.911]],["body/entities/ProductImagesEntity.html",[0,0.148,3,0.237,4,0.206,5,0.206,9,0.335,15,0.788,18,0.025,19,0.752,20,0.788,25,0.321,31,0.237,38,0.951,40,1.613,65,0.017,66,0.017,72,1.525,201,1.164,320,1.559,328,1.41,452,3.005,453,3.005,454,3.221,464,1.559,465,1.957,469,4.002,475,3.597,479,2.974,481,2.882,487,4.002,490,4.029,557,2.958,571,2.65,572,2.775,579,4.007,580,4.007,640,3.667,663,5.365,664,2.958,665,3.494,666,3.494,667,3.494,668,3.494,669,3.494,670,3.494,671,3.494,672,3.494,673,3.494,674,3.494]],["title/injectables/ProductImagesService.html",[117,1.162,614,1.911]],["body/injectables/ProductImagesService.html",[0,0.093,3,0.149,4,0.13,5,0.243,9,0.211,10,1.078,11,1.892,15,0.588,17,1.682,18,0.026,19,1.135,20,0.588,21,1.297,23,1.315,25,0.358,28,0.505,31,0.149,33,1.747,36,3.101,40,1.155,47,1.315,49,1.313,50,1.924,54,1.403,60,3.101,62,1.816,65,0.012,66,0.012,77,1.135,101,0.979,117,1.151,118,1.135,127,2.595,153,1.637,179,1.637,180,1.859,185,2.394,204,1.637,227,0.913,246,2.59,249,2.265,250,1.859,251,2.265,273,2.796,303,2.822,319,1.471,320,0.979,326,1.471,328,1.312,330,1.747,364,2.861,372,2.061,377,2.061,438,1.471,481,2.394,556,2.265,571,1.229,572,3.072,581,1.637,596,3.724,597,3.348,600,2.861,602,2.861,607,2.59,609,1.859,614,1.892,617,2.59,618,1.859,619,1.859,621,3.487,639,1.859,640,3.047,648,2.861,652,1.859,653,3.487,658,2.52,675,1.859,676,2.195,677,2.195,678,3.379,679,3.379,680,2.195,681,3.379,682,3.379,683,2.195,684,3.379,685,2.195,686,1.859,687,2.195,688,2.195,689,2.195,690,2.195,691,2.195,692,2.195,693,2.195,694,2.195,695,2.195,696,2.195,697,2.195,698,2.195,699,2.195,700,2.195,701,3.379,702,2.195,703,2.195,704,2.195,705,2.195,706,2.195,707,2.195,708,2.195,709,1.859,710,2.52,711,2.195,712,2.195,713,2.195,714,4.994,715,2.195,716,2.195,717,2.195,718,2.195,719,3.379,720,2.195,721,2.195]],["title/controllers/ProductsController.html",[67,1.327,722,2.287]],["body/controllers/ProductsController.html",[0,0.098,3,0.158,4,0.137,5,0.137,9,0.223,10,1.126,15,0.651,17,1.732,18,0.025,19,1.025,20,0.685,21,1.336,23,1.635,25,0.392,27,1.301,28,0.535,31,0.158,32,1.114,35,1.574,38,1.188,41,1.301,47,1.888,49,1.991,50,2.131,54,0.791,62,2.151,65,0.013,66,0.013,67,0.903,69,0.966,72,1.26,76,1.417,77,1.201,125,1.557,127,2.859,144,1.732,145,1.732,146,1.283,154,2.631,155,2.859,157,1.557,166,1.557,169,2.631,170,1.557,171,0.651,174,1.201,177,1.557,185,2.456,190,1.557,191,1.557,246,1.301,257,1.732,328,1.417,330,2.788,332,1.557,343,1.732,365,2.602,371,1.975,372,2.906,373,2.365,374,2.365,382,1.732,385,1.732,386,2.987,388,1.732,392,1.967,395,1.557,397,1.557,398,1.967,403,1.967,408,1.732,409,1.967,411,2.987,412,1.732,414,1.967,416,1.732,438,1.557,468,3.552,481,3.015,500,3.02,544,2.365,620,1.967,710,3.181,722,2.365,723,1.967,724,2.323,725,2.323,726,2.323,727,2.323,728,2.323,729,2.323,730,3.523,731,2.323,732,2.388,733,1.967,734,2.631,735,2.323,736,2.323,737,2.323,738,4.763,739,2.323,740,1.967,741,2.323,742,2.323,743,2.323,744,2.323]],["title/modules/ProductsModule.html",[79,1.522,93,2.082]],["body/modules/ProductsModule.html",[0,0.162,3,0.259,4,0.225,5,0.225,18,0.025,25,0.446,28,0.879,31,0.259,65,0.018,66,0.018,69,2.088,79,2.502,81,1.973,82,1.973,83,2.329,84,2.329,85,1.973,86,3.422,87,2.329,93,4.011,94,3.063,95,2.329,96,2.329,98,2.558,100,2.558,101,1.703,479,1.973,481,2.407,571,2.811,581,2.846,595,3.76,597,3.365,614,3.559,615,3.232,686,3.232,722,3.76,732,3.559,733,3.232,745,3.232,746,3.232,747,3.817,748,3.817,749,3.232,750,3.817,751,3.817]],["title/injectables/ProductsService.html",[117,1.162,732,1.911]],["body/injectables/ProductsService.html",[0,0.09,3,0.144,4,0.126,5,0.126,9,0.204,10,1.053,15,0.662,17,1.79,18,0.026,19,1.241,20,0.626,21,1.38,23,1.571,25,0.353,28,0.49,31,0.144,33,1.705,35,2.196,36,2.707,40,1.616,47,1.571,49,1.914,50,2.26,54,1.549,62,1.655,65,0.012,66,0.012,77,1.1,101,0.949,117,1.123,118,1.1,127,2.812,138,1.426,185,2.605,227,2.666,273,2.547,303,2.775,319,1.426,320,0.949,326,2.211,328,1.621,330,2.352,359,2.792,365,2.012,371,1.847,372,2.775,373,2.211,374,2.211,377,3.177,382,2.459,385,2.459,388,2.459,395,1.426,397,1.426,428,2.792,438,1.426,440,1.801,444,2.792,445,2.792,449,1.801,467,3.012,468,3.012,479,1.1,481,2.692,500,2.547,504,2.211,505,2.211,556,3.049,572,1.705,710,3.012,730,2.775,732,1.847,734,2.459,740,1.801,749,1.801,752,1.801,753,2.127,754,2.127,755,3.298,756,2.127,757,2.127,758,2.127,759,2.127,760,2.127,761,2.127,762,2.127,763,3.298,764,2.127,765,3.298,766,4.038,767,2.127,768,3.298,769,3.298,770,2.127]],["title/classes/ProfileDto.html",[0,0.144,172,2.287]],["body/classes/ProfileDto.html",[0,0.17,2,1.201,3,0.272,4,0.237,5,0.237,9,0.385,15,0.772,18,0.025,19,1.237,20,0.772,21,1.455,25,0.272,31,0.272,38,1.295,40,1.455,65,0.019,66,0.019,72,1.495,128,3.853,171,1.126,172,3.477,201,1.277,328,1.51,334,3.853,455,2.995,458,2.449,586,3.399,771,3.399,772,4.014,773,4.014,774,4.014,775,4.014,776,4.014,777,4.014,778,4.014,779,4.014,780,4.014,781,4.014,782,4.014]],["title/classes/RegisterDto.html",[0,0.144,150,2.082]],["body/classes/RegisterDto.html",[0,0.222,2,1.225,3,0.278,4,0.242,5,0.242,9,0.393,15,0.737,18,0.025,20,0.737,25,0.357,31,0.278,38,1.302,65,0.019,66,0.019,72,1.428,150,3.205,171,1.148,201,1.293,334,3.889,344,3.249,455,2.73,532,3.889,537,5.183,538,5.183,539,3.466,540,3.466,541,3.053,543,3.466,783,3.466,784,4.094,785,4.094,786,4.094,787,4.094,788,4.094,789,4.094,790,5.254,791,4.094]],["title/classes/ResponseFormatter.html",[0,0.144,32,1.636]],["body/classes/ResponseFormatter.html",[0,0.171,1,1.864,2,0.832,3,0.189,4,0.164,5,0.164,6,2.074,7,2.355,8,3.414,9,0.267,10,1.287,11,2.258,12,2.355,13,2.074,14,3.414,15,0.732,17,1.467,18,0.025,19,0.868,20,0.702,21,1.131,22,3.414,23,1.287,25,0.274,26,3.538,27,1.557,28,0.64,29,3.414,30,1.697,31,0.274,32,2.274,33,2.085,34,4.626,35,2.569,36,3.488,37,4.811,38,1.223,39,4.759,40,1.706,41,2.258,42,4.017,43,4.017,44,3.414,45,3.414,46,3.414,47,1.287,48,4.405,49,1.081,50,2.298,51,2.355,52,2.355,53,2.355,54,1.616,55,3.414,56,2.355,57,2.355,58,2.355,59,2.074,60,1.864,61,2.355,62,1.011,63,3.414,64,2.355,65,0.014,66,0.014,201,0.992,485,2.894,792,2.781,793,2.781,794,4.017,795,2.781,796,2.781,797,2.781,798,2.781,799,2.781]],["title/classes/UpdateCategoryDto.html",[0,0.144,389,2.082]],["body/classes/UpdateCategoryDto.html",[0,0.208,2,1.473,3,0.334,4,0.291,5,0.291,18,0.025,25,0.4,31,0.334,65,0.021,66,0.021,171,1.38,259,3.948,371,2.757,376,2.757,389,3.594,396,3.671,496,3.671,800,4.168,801,5.89,802,4.168]],["title/classes/UpdateProductDto.html",[0,0.144,730,2.082]],["body/classes/UpdateProductDto.html",[0,0.208,2,1.473,3,0.334,4,0.291,5,0.291,18,0.025,25,0.4,31,0.334,65,0.021,66,0.021,171,1.38,259,3.948,371,2.757,500,2.757,502,3.671,730,3.594,734,3.671,802,4.168,803,4.168,804,5.89]],["title/entities/UserEntity.html",[285,2.082,464,1.522]],["body/entities/UserEntity.html",[0,0.141,3,0.226,4,0.196,5,0.196,9,0.319,15,0.795,18,0.025,20,0.822,21,1.283,25,0.226,31,0.226,38,1.28,40,1.283,65,0.016,66,0.016,72,1.539,128,3.506,201,1.126,227,2.344,285,2.791,320,1.483,328,1.374,334,3.506,344,2.929,452,2.929,453,2.929,454,3.155,464,1.483,465,1.862,473,2.48,475,3.506,477,2.48,484,3.412,485,3.437,490,4.334,493,2.48,494,2.48,532,3.506,805,2.816,806,3.325,807,5.634,808,5.634,809,3.325,810,3.325,811,3.325,812,3.325,813,3.325,814,3.325,815,3.325]],["title/coverage.html",[816,3.473]],["body/coverage.html",[0,0.279,1,1.898,5,0.167,6,3.047,18,0.025,20,0.36,32,1.358,62,1.03,65,0.015,66,0.015,67,2.163,68,1.898,70,2.398,74,1.586,85,1.464,117,1.974,119,2.398,123,1.898,124,2.398,140,1.728,150,1.728,159,1.586,172,1.898,174,1.464,258,2.398,276,1.728,282,1.728,285,1.728,299,2.398,340,2.398,368,1.898,369,2.398,376,1.586,389,1.728,393,1.586,399,1.898,421,1.586,424,2.398,451,2.398,464,2.34,466,2.398,479,1.464,495,2.398,496,3.047,500,1.586,501,2.398,502,3.047,512,2.398,531,2.398,544,1.898,545,2.398,555,2.398,571,1.586,595,1.898,596,3.047,597,2.739,598,2.398,607,1.586,614,1.586,617,1.586,654,3.047,655,3.047,663,2.398,664,2.398,675,2.398,709,5.904,722,1.898,723,2.398,730,1.728,732,1.586,752,2.398,771,2.398,783,2.398,800,2.398,803,2.398,805,2.398,816,2.112,817,2.832,818,2.832,819,2.832,820,4.793,821,2.398,822,4.085,823,6.231,824,2.398,825,2.398,826,5.563,827,2.398,828,2.832,829,4.793,830,5.247,831,2.832,832,5.247,833,4.085,834,2.832,835,2.832,836,2.832]],["title/dependencies.html",[82,2.122,837,2.413]],["body/dependencies.html",[0,0.23,18,0.025,28,0.995,30,2.637,65,0.02,66,0.02,82,2.235,101,1.928,106,3.66,107,3.66,165,3.223,171,1.212,271,2.897,281,3.223,290,3.223,320,1.928,323,3.66,521,3.66,541,3.223,838,5.95,839,4.322,840,4.322,841,4.322,842,4.322,843,4.322,844,4.322,845,4.322,846,4.322,847,4.322,848,4.322,849,4.322,850,4.322,851,4.322,852,4.322,853,4.322,854,4.322,855,4.322,856,4.322,857,4.322,858,4.322,859,4.322,860,4.322,861,4.322]],["title/miscellaneous/functions.html",[862,1.91,863,3.475]],["body/miscellaneous/functions.html",[9,0.509,18,0.022,65,0.022,66,0.022,85,3.361,827,4.489,862,3.554,863,4.489,864,5.302]],["title/index.html",[9,0.274,865,2.85,866,2.85]],["body/index.html",[4,0.228,18,0.025,59,2.882,65,0.018,66,0.018,108,3.272,146,1.405,229,2.59,303,2.358,816,2.882,867,3.864,868,3.864,869,5.061,870,3.864,871,3.864,872,3.864,873,3.864,874,3.864,875,5.643,876,3.864,877,3.864,878,3.864,879,5.643,880,6.498,881,3.864,882,3.864,883,3.864,884,6.377,885,3.864,886,3.864,887,5.061,888,3.864,889,3.864,890,3.864,891,3.864,892,5.061,893,5.061,894,3.864,895,3.864,896,3.864,897,5.061,898,5.061,899,3.864,900,3.864,901,3.864,902,3.864,903,3.864,904,3.864,905,3.864,906,3.864,907,3.864,908,3.864,909,3.864,910,3.864,911,3.864,912,3.864,913,3.272,914,3.864,915,3.864,916,3.864,917,3.864,918,3.864,919,3.864,920,3.272]],["title/modules.html",[81,2.408]],["body/modules.html",[18,0.021,65,0.021,66,0.021,80,3.367,81,2.597,91,3.064,92,3.064,93,3.064,229,4.407,921,6.575,922,6.575,923,6.575]],["title/overview.html",[924,3.943]],["body/overview.html",[2,1.186,18,0.024,65,0.018,66,0.018,69,1.649,74,3.199,79,1.768,80,4.529,81,2.049,82,2.049,83,2.418,84,2.418,85,2.049,86,2.418,87,2.418,88,3.356,89,3.356,90,3.356,91,3.988,92,3.823,93,3.988,94,3.139,95,2.418,96,2.418,118,2.049,159,3.199,274,3.356,275,3.356,276,3.485,393,3.199,417,3.356,418,3.356,465,2.219,614,3.199,732,3.199,745,3.356,746,3.356,924,3.356,925,5.145,926,3.963,927,3.963,928,3.963]],["title/properties.html",[201,1.01,837,2.413]],["body/properties.html",[18,0.025,65,0.022,66,0.022,146,1.904,201,1.288,913,4.432,920,4.432,929,5.234,930,5.234,931,5.234]],["title/miscellaneous/variables.html",[862,1.91,932,3.475]],["body/miscellaneous/variables.html",[9,0.414,13,3.212,18,0.025,20,0.755,65,0.02,66,0.02,200,3.212,227,1.792,282,3.31,294,3.212,344,2.412,465,2.412,485,3.31,529,4.594,532,2.887,794,4.594,821,3.647,824,3.647,825,4.594,862,2.887,932,3.647,933,4.307,934,4.307,935,4.307,936,4.307,937,6.236,938,4.307,939,4.307,940,4.307,941,4.307,942,4.307,943,4.307,944,4.307,945,4.307,946,4.307,947,4.307,948,4.307,949,4.307,950,4.307,951,4.307]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":709,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":930,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["1/8",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":568,"title":{},"body":{"entities/ProductEntity.html":{}}}],["10.0.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["10000",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["12",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["14",{"_index":928,"title":{},"body":{"overview.html":{}}}],["2",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{}}}],["2mb",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["3.2.2",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["3600",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":925,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":926,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["5432",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":927,"title":{},"body":{"overview.html":{}}}],["7.3.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["8.11.5",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abcdefghij",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["already",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":904,"title":{},"body":{"index.html":{}}}],["anda",{"_index":628,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["andwhere",{"_index":701,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["andwhere('category.status",{"_index":698,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["andwhere('product_images.id",{"_index":699,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["apibearerauth",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["apibearerauth('accesstoken",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiconsumes",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiconsumes('multipart/form",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["apiproperty",{"_index":455,"title":{},"body":{"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(16",{"_index":533,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring",{"_index":535,"title":{},"body":{"classes/LoginDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":788,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isemail",{"_index":784,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@minlength(8)@maxlength(16",{"_index":786,"title":{},"body":{"classes/RegisterDto.html":{}}}],["apipropertyoptional",{"_index":458,"title":{},"body":{"classes/CategoryDtoOut.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{}}}],["apipropertyoptional({type",{"_index":659,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["apiresponse",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apiresponse({status",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["apitags",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["apitags('auth",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('category",{"_index":401,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('product",{"_index":620,"title":{},"body":{"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["app",{"_index":882,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":68,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":874,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":80,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":74,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["array",{"_index":782,"title":{},"body":{"classes/ProfileDto.html":{}}}],["async",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.guard",{"_index":398,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["auth/login",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/register",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["authcontroller",{"_index":123,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":174,"title":{"classes/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["authmodule",{"_index":91,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":913,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":159,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ProfileDto.html":{},"entities/UserEntity.html":{}}}],["avatar(@req",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["backers",{"_index":905,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["badrequestexception('failed",{"_index":653,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["badrequestexception('no",{"_index":635,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["bahwa",{"_index":627,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["bcrypt",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["binary",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["body",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["boolean",{"_index":461,"title":{},"body":{"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{}}}],["bootstrap",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":923,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":921,"title":{},"body":{"modules.html":{}}}],["building",{"_index":870,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":261,"title":{},"body":{"classes/AuthGuard.html":{}}}],["canactivate(context",{"_index":263,"title":{},"body":{"classes/AuthGuard.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"classes/ResponseFormatter.html":{}}}],["catch(exception",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["categories",{"_index":370,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["categories.controller",{"_index":420,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":394,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories_id",{"_index":433,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoriescontroller",{"_index":368,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":92,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":393,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":377,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["category.dto",{"_index":396,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":496,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:11",{"_index":499,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":498,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:8",{"_index":497,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.products",{"_index":584,"title":{},"body":{"entities/ProductEntity.html":{}}}],["category.products)@joincolumn({name",{"_index":558,"title":{},"body":{"entities/ProductEntity.html":{}}}],["categorydtoout",{"_index":399,"title":{"classes/CategoryDtoOut.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"coverage.html":{}}}],["categorydtoout})@get",{"_index":380,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categorydtoout})@get(':id",{"_index":383,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categoryentity",{"_index":421,"title":{"entities/CategoryEntity.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"coverage.html":{}}}],["categoryid",{"_index":503,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{}}}],["categoryname",{"_index":658,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"injectables/ProductImagesService.html":{}}}],["categoryrepository",{"_index":427,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cb",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["cb(null",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["checkpassword",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.email",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.username",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AuthGuard.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthGuard.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":417,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":418,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":745,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":746,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["column",{"_index":490,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["column({nullable",{"_index":473,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UserEntity.html":{}}}],["column({type",{"_index":484,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UserEntity.html":{}}}],["column({unique",{"_index":477,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UserEntity.html":{}}}],["compare",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["config",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/ormconfig",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error",{"_index":719,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["console.error(`error",{"_index":650,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["console.error(`failed",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["const",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["constructor(categoryrepository",{"_index":425,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(data",{"_index":792,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["constructor(private",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["constructor(productimagesrepository",{"_index":676,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["constructor(productrepository",{"_index":753,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(userrepository",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":266,"title":{},"body":{"classes/AuthGuard.html":{}}}],["controller",{"_index":67,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":402,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('product/images",{"_index":622,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["controller('products",{"_index":736,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["coverage",{"_index":816,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":371,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["create(@body",{"_index":403,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["create(createcategorydto",{"_index":375,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["create(createproductdto",{"_index":724,"title":{},"body":{"controllers/ProductsController.html":{}}}],["create(data",{"_index":428,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["createcategorydto",{"_index":376,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto})@post",{"_index":378,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["created",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["createdat",{"_index":452,"title":{},"body":{"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["createdatecolumn",{"_index":469,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["createproductdto",{"_index":500,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createquerybuilder('product_images",{"_index":694,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["createuser",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["ctx.getresponse",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["current",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["current_timestamp",{"_index":808,"title":{},"body":{"entities/UserEntity.html":{}}}],["dari",{"_index":632,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["data",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["data')@apibody({schema",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["data.email",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.username",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["database",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":454,"title":{},"body":{"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["decimal",{"_index":566,"title":{},"body":{"entities/ProductEntity.html":{}}}],["declarations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["decorator",{"_index":777,"title":{},"body":{"classes/ProfileDto.html":{}}}],["decorators",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["default",{"_index":485,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{}}}],["delete",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{}}}],["delete(':id",{"_index":386,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["delete(':id/delete",{"_index":604,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleted",{"_index":416,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["deletedat",{"_index":467,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"injectables/ProductsService.html":{}}}],["deletedatecolumn",{"_index":471,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{}}}],["deletedproduct",{"_index":769,"title":{},"body":{"injectables/ProductsService.html":{}}}],["deleteproductimagebyid",{"_index":600,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["deleteproductimagebyid(@param('id",{"_index":647,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleteproductimagebyid(id",{"_index":603,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["deleteproductimagebyid(productimageid",{"_index":679,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["deleting",{"_index":651,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["dengan",{"_index":593,"title":{},"body":{"entities/ProductEntity.html":{}}}],["dependencies",{"_index":82,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":445,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["description",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["development",{"_index":883,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["documentation",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["dto/category.dto",{"_index":400,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["dto/create",{"_index":395,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/login.dto",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/product",{"_index":618,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["dto/product.dto",{"_index":735,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dto/profile.dto",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/register.dto",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":397,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dtoin",{"_index":639,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["dtoin.image",{"_index":691,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["dtoin.product_id",{"_index":690,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["e2e",{"_index":894,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":871,"title":{},"body":{"index.html":{}}}],["email",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{}}}],["entities",{"_index":465,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/category.entity",{"_index":422,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["entities/product",{"_index":686,"title":{},"body":{"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{}}}],["entities/product.entity",{"_index":749,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["entities/user.entity",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["entity",{"_index":464,"title":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["entity('categories",{"_index":492,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["entity('product_images",{"_index":673,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["entity('products",{"_index":583,"title":{},"body":{"entities/ProductEntity.html":{}}}],["entity('users",{"_index":815,"title":{},"body":{"entities/UserEntity.html":{}}}],["entity.{js,ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["err.message",{"_index":720,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"classes/ResponseFormatter.html":{}}}],["error.message",{"_index":652,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["example",{"_index":879,"title":{},"body":{"index.html":{}}}],["exception",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exception.getresponse().tostring",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exception.getstatus",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["executioncontext",{"_index":264,"title":{},"body":{"classes/AuthGuard.html":{}}}],["exists",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["existssync",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["existssync('public",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["expired",{"_index":529,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{}}}],["exports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["express",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"classes/ResponseFormatter.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["extends",{"_index":259,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["extension",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["extractjwt",{"_index":519,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":524,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["false",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"entities/CategoryEntity.html":{},"injectables/JwtStrategy.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["file.filename",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.mimetype",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["file.originalname",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["filefilter",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["fileinterceptor",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["fileinterceptor('avatar",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('images",{"_index":623,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["filename",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["filesize",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["filter",{"_index":609,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["filter.categoryname",{"_index":706,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["filter.id",{"_index":700,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["filter.product_id",{"_index":703,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["findall",{"_index":372,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findall(filter",{"_index":682,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["findallproductimages",{"_index":601,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findallproductimages(@query",{"_index":644,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findallproductimages(filter",{"_index":606,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["findone",{"_index":373,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["findone(@param('id",{"_index":409,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["findone(categories_id",{"_index":431,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["findone(id",{"_index":382,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["format",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["formaterror",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["formaterror(message",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["formattedresponse",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["found",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["framework",{"_index":869,"title":{},"body":{"index.html":{}}}],["fs",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductImagesService.html":{}}}],["fs/promises",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":863,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/profile",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":408,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["gethello",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getmany",{"_index":707,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["getting",{"_index":865,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser(userid",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["grow",{"_index":901,"title":{},"body":{"index.html":{}}}],["gunakan",{"_index":776,"title":{},"body":{"classes/ProfileDto.html":{}}}],["handlerequest",{"_index":262,"title":{},"body":{"classes/AuthGuard.html":{}}}],["handlerequest(err",{"_index":267,"title":{},"body":{"classes/AuthGuard.html":{}}}],["hash",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":121,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":910,"title":{},"body":{"index.html":{}}}],["host",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["httpexception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["httpexception('password",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":917,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{}}}],["httpstatus.bad_request",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.internal_server_error",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["httpstatus.not_found",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.ok",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{}}}],["httpstatus.unauthorized",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"injectables/JwtStrategy.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"entities/UserEntity.html":{}}}],["identifier",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":525,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":572,"title":{},"body":{"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["image.id",{"_index":712,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.image",{"_index":714,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product",{"_index":573,"title":{},"body":{"entities/ProductEntity.html":{}}}],["image.product.category.name",{"_index":717,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product.name",{"_index":715,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product.status",{"_index":716,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image.product_id",{"_index":713,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["image/jpeg",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["image/jpg",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["image/png",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["imagepath",{"_index":637,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images",{"_index":621,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["images.controller",{"_index":750,"title":{},"body":{"modules/ProductsModule.html":{}}}],["images.controller.ts",{"_index":598,"title":{},"body":{"controllers/ProductImagesController.html":{},"coverage.html":{}}}],["images.controller.ts:102",{"_index":608,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.controller.ts:108",{"_index":605,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.controller.ts:80",{"_index":612,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["images.dto",{"_index":619,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["images.dto.ts",{"_index":655,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"coverage.html":{}}}],["images.dto.ts:11",{"_index":660,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.dto.ts:16",{"_index":657,"title":{},"body":{"classes/ProductImagesDtoIn.html":{}}}],["images.dto.ts:19",{"_index":656,"title":{},"body":{"classes/ProductImagesDtoIn.html":{}}}],["images.dto.ts:5",{"_index":661,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.dto.ts:8",{"_index":662,"title":{},"body":{"classes/ProductImagesDtoOut.html":{}}}],["images.entity",{"_index":581,"title":{},"body":{"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{}}}],["images.entity.ts",{"_index":664,"title":{},"body":{"entities/ProductImagesEntity.html":{},"coverage.html":{}}}],["images.entity.ts:15",{"_index":666,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:18",{"_index":670,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:21",{"_index":667,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:24",{"_index":665,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:27",{"_index":671,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.entity.ts:31",{"_index":669,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["images.service",{"_index":615,"title":{},"body":{"controllers/ProductImagesController.html":{},"modules/ProductsModule.html":{}}}],["images.service.ts",{"_index":675,"title":{},"body":{"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["images.service.ts:16",{"_index":677,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:22",{"_index":685,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:35",{"_index":683,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images.service.ts:79",{"_index":680,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["images/product",{"_index":597,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{}}}],["imports",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{}}}],["inject(request",{"_index":440,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["injectable",{"_index":117,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["injectables",{"_index":118,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["injectrepository(categoryentity",{"_index":439,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["injectrepository(productentity",{"_index":761,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(productimagesentity",{"_index":687,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["injectrepository(userentity",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["innerjoinandselect('product.category",{"_index":696,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["innerjoinandselect('product_images.product",{"_index":695,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["installation",{"_index":878,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":881,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["int",{"_index":576,"title":{},"body":{"entities/ProductEntity.html":{}}}],["internal",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["isemail",{"_index":790,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":537,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring",{"_index":538,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["jika",{"_index":588,"title":{},"body":{"entities/ProductEntity.html":{}}}],["join",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":579,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["jpeg",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["jpg",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["jwt",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":298,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":523,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":276,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":914,"title":{},"body":{"index.html":{}}}],["kolom",{"_index":590,"title":{},"body":{"entities/ProductEntity.html":{}}}],["konvensi",{"_index":594,"title":{},"body":{"entities/ProductEntity.html":{}}}],["legend",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["license",{"_index":920,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":898,"title":{},"body":{"index.html":{}}}],["limits",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["login",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":140,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["lower(:categoryname",{"_index":705,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["lower(category.name",{"_index":704,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["manytoone",{"_index":580,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["manytoone(undefined",{"_index":557,"title":{},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["match",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(7",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["maxlength",{"_index":539,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(16",{"_index":543,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["menambahkan",{"_index":587,"title":{},"body":{"entities/ProductEntity.html":{}}}],["menangkap",{"_index":630,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["mendokumentasikan",{"_index":778,"title":{},"body":{"classes/ProfileDto.html":{}}}],["message",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["metadata",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["minlength",{"_index":540,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":542,"title":{},"body":{"classes/LoginDto.html":{}}}],["minlength(8",{"_index":791,"title":{},"body":{"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":862,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":897,"title":{},"body":{"index.html":{}}}],["mode",{"_index":887,"title":{},"body":{"index.html":{}}}],["module",{"_index":79,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["modules",{"_index":81,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/categories/categories.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":909,"title":{},"body":{"index.html":{}}}],["multer",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["myśliwiec",{"_index":915,"title":{},"body":{"index.html":{}}}],["nama",{"_index":589,"title":{},"body":{"entities/ProductEntity.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{}}}],["namefolder",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["nest",{"_index":875,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":919,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":271,"title":{},"body":{"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["new",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["newproductimage",{"_index":688,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["node.js",{"_index":868,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":438,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('category",{"_index":447,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["notfoundexception('product",{"_index":710,"title":{},"body":{"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["notfoundexception('products",{"_index":740,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["null",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["nullable",{"_index":494,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UserEntity.html":{}}}],["number",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{}}}],["number(process.env.db_port",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(category",{"_index":448,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["object.assign(product",{"_index":767,"title":{},"body":{"injectables/ProductsService.html":{}}}],["old",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["onetomany",{"_index":491,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{}}}],["onetomany(undefined",{"_index":480,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{}}}],["open",{"_index":899,"title":{},"body":{"index.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"injectables/JwtStrategy.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{}}}],["order",{"_index":444,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["originalname",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["originalname.lastindexof",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["originalname.substring",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["ormconfig",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["out",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["overview",{"_index":924,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":837,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["param('id",{"_index":412,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["parameter",{"_index":633,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["partialtype",{"_index":802,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{}}}],["partialtype(createcategorydto",{"_index":801,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":804,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passport",{"_index":521,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportauthguard",{"_index":270,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportauthguard('jwt",{"_index":260,"title":{},"body":{"classes/AuthGuard.html":{}}}],["passportmodule",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":518,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":513,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":532,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["pastikan",{"_index":585,"title":{},"body":{"entities/ProductEntity.html":{}}}],["patch",{"_index":392,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["patch(':id",{"_index":411,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["path",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":530,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":527,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":528,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["perhatikan",{"_index":626,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["perlu",{"_index":629,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["pg",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["pgsql",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":907,"title":{},"body":{"index.html":{}}}],["png",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["port",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["post('/avatar",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/login",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(':id/upload",{"_index":625,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["postgres",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["precision",{"_index":567,"title":{},"body":{"entities/ProductEntity.html":{}}}],["prefix",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["price",{"_index":504,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductsService.html":{}}}],["primarygeneratedcolumn",{"_index":475,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["private",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["process.env.db_connection",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_database",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product",{"_index":481,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["product.category",{"_index":482,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["product.dto",{"_index":734,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":502,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":509,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:14",{"_index":511,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":510,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:20",{"_index":506,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:5",{"_index":508,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:8",{"_index":507,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.entity",{"_index":672,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["product.productimages",{"_index":674,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["product.productimages)@joincolumn({name",{"_index":668,"title":{},"body":{"entities/ProductImagesEntity.html":{}}}],["product/images",{"_index":599,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["product_id",{"_index":640,"title":{},"body":{"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{}}}],["product_images.product_id",{"_index":702,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productdtoout",{"_index":544,"title":{"classes/ProductDtoOut.html":{}},"body":{"classes/ProductDtoOut.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["productdtoout})@get(':id",{"_index":727,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productentity",{"_index":479,"title":{"entities/ProductEntity.html":{}},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productimage",{"_index":641,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["productimageid",{"_index":648,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["productimages",{"_index":556,"title":{},"body":{"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["productimages.length",{"_index":708,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimages.map((image",{"_index":711,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimagescontroller",{"_index":595,"title":{"controllers/ProductImagesController.html":{}},"body":{"controllers/ProductImagesController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productimagesdtoin",{"_index":617,"title":{"classes/ProductImagesDtoIn.html":{}},"body":{"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["productimagesdtoout",{"_index":607,"title":{"classes/ProductImagesDtoOut.html":{}},"body":{"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["productimagesentity",{"_index":571,"title":{"entities/ProductImagesEntity.html":{}},"body":{"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productimagesrepository",{"_index":678,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["productimagesservice",{"_index":614,"title":{"injectables/ProductImagesService.html":{}},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":889,"title":{},"body":{"index.html":{}}}],["productrepository",{"_index":755,"title":{},"body":{"injectables/ProductsService.html":{}}}],["products",{"_index":468,"title":{},"body":{"entities/CategoryEntity.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["products.controller",{"_index":748,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":733,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":722,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":93,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsservice",{"_index":732,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["produk",{"_index":631,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["profile",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["profiledto",{"_index":172,"title":{"classes/ProfileDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/ProfileDto.html":{},"coverage.html":{}}}],["profiledto})@apibearerauth('accesstoken')@useguards(authguard)@get('/profile",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":867,"title":{},"body":{"index.html":{}}}],["project",{"_index":900,"title":{},"body":{"index.html":{}}}],["promise",{"_index":681,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["properties",{"_index":201,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{},"properties.html":{}}}],["property",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["public",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ResponseFormatter.html":{}}}],["public/uploads/image",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/uploads/product",{"_index":624,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["query",{"_index":613,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["randomname",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["read",{"_index":908,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":77,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["reflect",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":150,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["relations",{"_index":765,"title":{},"body":{"injectables/ProductsService.html":{}}}],["remove",{"_index":374,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["remove(@param('id",{"_index":414,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["remove(categories_id",{"_index":434,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["remove(id",{"_index":385,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["repository",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"index.html":{}}}],["req",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductsService.html":{}}}],["req.user.id",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}],["response",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["response.status(status).json(formattedresponse",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["responseformatter",{"_index":32,"title":{"classes/ResponseFormatter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["responseformatter(categories",{"_index":407,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["responseformatter(category",{"_index":405,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["responseformatter(product",{"_index":738,"title":{},"body":{"controllers/ProductsController.html":{}}}],["responseformatter(productimage",{"_index":643,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["responseformatter(productimages",{"_index":646,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["responseformatter(products",{"_index":741,"title":{},"body":{"controllers/ProductsController.html":{}}}],["responseformatter(profile",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["responseformatter(uploadavatar",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["results",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["returns",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["rootpath",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":884,"title":{},"body":{"index.html":{}}}],["rute",{"_index":634,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["rxjs",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":872,"title":{},"body":{"index.html":{}}}],["scale",{"_index":569,"title":{},"body":{"entities/ProductEntity.html":{}}}],["schema",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["sebagai",{"_index":781,"title":{},"body":{"classes/ProfileDto.html":{}}}],["secret",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":526,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductsService.html":{}}}],["server",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"index.html":{}}}],["serveroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["sesuai",{"_index":592,"title":{},"body":{"entities/ProductEntity.html":{}}}],["side",{"_index":873,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"entities/UserEntity.html":{},"index.html":{}}}],["sponsors",{"_index":903,"title":{},"body":{"index.html":{}}}],["src/.../config_jwt.ts",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":864,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.ts",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":73,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":119,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":120,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/config_jwt",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/config_jwt.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ormconfig.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/response_formatter",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["src/config/response_formatter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{},"coverage.html":{}}}],["src/config/response_formatter.ts:10",{"_index":793,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:12",{"_index":795,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:13",{"_index":796,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:14",{"_index":797,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:17",{"_index":798,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:27",{"_index":799,"title":{},"body":{"classes/ResponseFormatter.html":{}}}],["src/config/response_formatter.ts:38",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/main.ts",{"_index":827,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:114",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:38",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:44",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:56",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.guard",{"_index":616,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["src/modules/auth/auth.guard.ts",{"_index":258,"title":{},"body":{"classes/AuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/auth.guard.ts:10",{"_index":268,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/modules/auth/auth.guard.ts:6",{"_index":265,"title":{},"body":{"classes/AuthGuard.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:115",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:13",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:155",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:21",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:40",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:65",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:95",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/login.dto.ts",{"_index":531,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/login.dto.ts:14",{"_index":534,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/login.dto.ts:7",{"_index":536,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts",{"_index":771,"title":{},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/profile.dto.ts:12",{"_index":773,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:15",{"_index":772,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:6",{"_index":774,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/profile.dto.ts:9",{"_index":775,"title":{},"body":{"classes/ProfileDto.html":{}}}],["src/modules/auth/dto/register.dto.ts",{"_index":783,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/auth/dto/register.dto.ts:14",{"_index":789,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:20",{"_index":785,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/dto/register.dto.ts:27",{"_index":787,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/auth/entities/user.entity.ts",{"_index":805,"title":{},"body":{"entities/UserEntity.html":{},"coverage.html":{}}}],["src/modules/auth/entities/user.entity.ts:12",{"_index":810,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:15",{"_index":812,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:18",{"_index":806,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:21",{"_index":809,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:24",{"_index":813,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:6",{"_index":811,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/entities/user.entity.ts:9",{"_index":814,"title":{},"body":{"entities/UserEntity.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":512,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:16",{"_index":517,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:7",{"_index":515,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/categories/categories.controller.ts",{"_index":369,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/modules/categories/categories.controller.ts:33",{"_index":379,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:45",{"_index":381,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:57",{"_index":384,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:69",{"_index":391,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.controller.ts:82",{"_index":387,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/modules/categories/categories.module.ts",{"_index":419,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/modules/categories/categories.service.ts",{"_index":424,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/modules/categories/categories.service.ts:17",{"_index":429,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:23",{"_index":430,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:33",{"_index":432,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:47",{"_index":437,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:63",{"_index":435,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/categories.service.ts:9",{"_index":426,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/modules/categories/dto/category.dto.ts",{"_index":451,"title":{},"body":{"classes/CategoryDtoOut.html":{},"coverage.html":{}}}],["src/modules/categories/dto/category.dto.ts:11",{"_index":457,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:14",{"_index":462,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:17",{"_index":456,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:20",{"_index":463,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:5",{"_index":459,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/category.dto.ts:8",{"_index":460,"title":{},"body":{"classes/CategoryDtoOut.html":{}}}],["src/modules/categories/dto/create",{"_index":495,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/categories/dto/update",{"_index":800,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/modules/categories/entities/category.entity",{"_index":582,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts",{"_index":466,"title":{},"body":{"entities/CategoryEntity.html":{},"coverage.html":{}}}],["src/modules/categories/entities/category.entity.ts:15",{"_index":476,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:18",{"_index":478,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:21",{"_index":486,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:24",{"_index":474,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:27",{"_index":470,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:30",{"_index":488,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:33",{"_index":472,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/categories/entities/category.entity.ts:36",{"_index":483,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/products/dto/create",{"_index":501,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/product",{"_index":654,"title":{},"body":{"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"coverage.html":{}}}],["src/modules/products/dto/product.dto.ts",{"_index":545,"title":{},"body":{"classes/ProductDtoOut.html":{},"coverage.html":{}}}],["src/modules/products/dto/product.dto.ts:11",{"_index":548,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:14",{"_index":551,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:17",{"_index":553,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:20",{"_index":552,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:23",{"_index":546,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:26",{"_index":547,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:29",{"_index":554,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:5",{"_index":549,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/product.dto.ts:8",{"_index":550,"title":{},"body":{"classes/ProductDtoOut.html":{}}}],["src/modules/products/dto/update",{"_index":803,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/entities/product",{"_index":663,"title":{},"body":{"entities/ProductImagesEntity.html":{},"coverage.html":{}}}],["src/modules/products/entities/product.entity",{"_index":489,"title":{},"body":{"entities/CategoryEntity.html":{}}}],["src/modules/products/entities/product.entity.ts",{"_index":555,"title":{},"body":{"entities/ProductEntity.html":{},"coverage.html":{}}}],["src/modules/products/entities/product.entity.ts:18",{"_index":564,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:21",{"_index":565,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:24",{"_index":563,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:27",{"_index":570,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:30",{"_index":577,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:33",{"_index":575,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:36",{"_index":560,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:39",{"_index":561,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:42",{"_index":578,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:45",{"_index":562,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:49",{"_index":559,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/entities/product.entity.ts:52",{"_index":574,"title":{},"body":{"entities/ProductEntity.html":{}}}],["src/modules/products/product",{"_index":596,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts",{"_index":723,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":725,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:36",{"_index":726,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:52",{"_index":728,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:63",{"_index":731,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:77",{"_index":729,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":747,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":752,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:110",{"_index":759,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:16",{"_index":756,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:22",{"_index":757,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:56",{"_index":758,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:9",{"_index":754,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:91",{"_index":760,"title":{},"body":{"injectables/ProductsService.html":{}}}],["start",{"_index":885,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":888,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":890,"title":{},"body":{"index.html":{}}}],["started",{"_index":866,"title":{"index.html":{}},"body":{}}],["starter",{"_index":877,"title":{},"body":{"index.html":{}}}],["statements",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["statuscode",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ResponseFormatter.html":{}}}],["stay",{"_index":911,"title":{},"body":{"index.html":{}}}],["stock",{"_index":505,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"injectables/ProductsService.html":{}}}],["storage",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["strategy",{"_index":520,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"controllers/ProductsController.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{}}}],["sub",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["success",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":522,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":272,"title":{},"body":{"classes/AuthGuard.html":{}}}],["support",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["svg",{"_index":922,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":780,"title":{},"body":{"classes/ProfileDto.html":{}}}],["test",{"_index":893,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":896,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":895,"title":{},"body":{"index.html":{}}}],["tests",{"_index":892,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":902,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":78,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getuser(userid",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(data",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(userid",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":404,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":406,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findone(+id",{"_index":410,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.remove(+id",{"_index":415,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.update",{"_index":413,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoryrepository.create(data",{"_index":441,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.find",{"_index":443,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.findone",{"_index":446,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.save(category",{"_index":442,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categoryrepository.softremove(category",{"_index":450,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.data",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.generatejwt",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.message",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.productimagesrepository",{"_index":693,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.create",{"_index":689,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.findone",{"_index":718,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.remove(image",{"_index":721,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesrepository.save(newproductimage",{"_index":692,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["this.productimagesservice.deleteproductimagebyid(productimageid",{"_index":649,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productimagesservice.findall(filter",{"_index":645,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productimagesservice.uploadproductimage(dtoin",{"_index":642,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["this.productrepository.create(data",{"_index":762,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.find",{"_index":764,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.findone",{"_index":766,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.save(product",{"_index":763,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productrepository.softremove(product",{"_index":770,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.create(createproductdto",{"_index":737,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findall",{"_index":739,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.findone(+id",{"_index":742,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.remove(+id",{"_index":744,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.update(+id",{"_index":743,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.statuscode",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["this.userrepository.findone",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.save",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.update",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":273,"title":{},"body":{"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{}}}],["tidak",{"_index":591,"title":{},"body":{"entities/ProductEntity.html":{}}}],["timestamp",{"_index":807,"title":{},"body":{"entities/UserEntity.html":{}}}],["tipe",{"_index":779,"title":{},"body":{"classes/ProfileDto.html":{}}}],["tojson",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ResponseFormatter.html":{}}}],["touch",{"_index":912,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["twitter",{"_index":918,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"controllers/ProductImagesController.html":{},"classes/ProductImagesDtoIn.html":{},"classes/ProductImagesDtoOut.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"classes/RegisterDto.html":{},"classes/ResponseFormatter.html":{},"entities/UserEntity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"injectables/ProductImagesService.html":{},"injectables/ProductsService.html":{},"entities/UserEntity.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([categoryentity",{"_index":423,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["typeormmodule.forfeature([productentity",{"_index":751,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([userentity",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":876,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":269,"title":{},"body":{"classes/AuthGuard.html":{}}}],["undefined",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["undefined})@useinterceptors(undefined)@post('/avatar",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["undefined})@useinterceptors(undefined)@post(':id/upload",{"_index":611,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["unique",{"_index":493,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/UserEntity.html":{}}}],["unit",{"_index":891,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/ResponseFormatter.html":{}}}],["unlicensed",{"_index":931,"title":{},"body":{"properties.html":{}}}],["unlink",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductImagesService.html":{}}}],["unlink('public",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/ProductImagesService.html":{}}}],["unlink(user.avatar",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["untuk",{"_index":586,"title":{},"body":{"entities/ProductEntity.html":{},"classes/ProfileDto.html":{}}}],["update",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["update(categories_id",{"_index":436,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["update(id",{"_index":388,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateavatar",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateavatar.affected",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatecategorydto",{"_index":389,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatecategorydto})@patch(':id",{"_index":390,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["updated",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductsController.html":{}}}],["updatedat",{"_index":453,"title":{},"body":{"classes/CategoryDtoOut.html":{},"entities/CategoryEntity.html":{},"classes/ProductDtoOut.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{},"entities/UserEntity.html":{}}}],["updatedatecolumn",{"_index":487,"title":{},"body":{"entities/CategoryEntity.html":{},"entities/ProductEntity.html":{},"entities/ProductImagesEntity.html":{}}}],["updatedproduct",{"_index":768,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updateproductdto",{"_index":730,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["upload",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["uploadavatar",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploaded",{"_index":636,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["uploadedfile",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["uploadproductimage",{"_index":602,"title":{},"body":{"controllers/ProductImagesController.html":{},"injectables/ProductImagesService.html":{}}}],["uploadproductimage(dtoin",{"_index":684,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["uploadproductimage(file",{"_index":610,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["uploads/image",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/product/${file.filename",{"_index":638,"title":{},"body":{"controllers/ProductImagesController.html":{}}}],["useguards",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["useguards(authguard",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProductImagesController.html":{},"controllers/ProductsController.html":{}}}],["useinterceptors",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductImagesController.html":{}}}],["user",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user's",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.avatar",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["userentity",{"_index":285,"title":{"entities/UserEntity.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"entities/UserEntity.html":{},"coverage.html":{}}}],["userid",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["username",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"entities/UserEntity.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":514,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":516,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":541,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":794,"title":{},"body":{"classes/ResponseFormatter.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":932,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":929,"title":{},"body":{"properties.html":{}}}],["void",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["watch",{"_index":886,"title":{},"body":{"index.html":{}}}],["website",{"_index":916,"title":{},"body":{"index.html":{}}}],["where('product.deletedat",{"_index":697,"title":{},"body":{"injectables/ProductImagesService.html":{}}}],["withdeleted",{"_index":449,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/ProductsService.html":{}}}],["world",{"_index":122,"title":{},"body":{"injectables/AppService.html":{}}}],["yarn",{"_index":880,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":906,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/ProductsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/response_formatter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class ResponseFormatter {\n  constructor(\n    public data: any = null,\n    public message: string,\n    public statusCode: number = HttpStatus.OK,\n  ) {}\n\n  formatError(\n    message: string,\n    statusCode: number = HttpStatus.INTERNAL_SERVER_ERROR,\n  ) {\n    this.data = null;\n    this.message = message;\n    this.statusCode = statusCode;\n    return this;\n  }\n\n  toJSON() {\n    return {\n      message: this.message,\n      statusCode: this.statusCode,\n      data: this.data,\n    };\n  }\n}\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? exception.getResponse().toString()\n        : 'Internal server error';\n\n    const formattedResponse = new ResponseFormatter(\n      null,\n      message,\n      status,\n    ).formatError(message, status);\n\n    response.status(status).json(formattedResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            ProductsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuthModule } from './modules/auth/auth.module';\nimport ormconfig from './config/ormconfig';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { CategoriesModule } from './modules/categories/categories.module';\nimport { ProductsModule } from './modules/products/products.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(ormconfig),\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n      serveRoot: '/',\n    }),\n    CategoriesModule,\n    ProductsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('/avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Profile data', type: ProfileDto})@ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@Get('/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { diskStorage } from 'multer';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiResponse,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { ProfileDto } from './dto/profile.dto';\nimport { AuthGuard } from './auth.guard';\nimport { LoginDto } from './dto/login.dto';\n\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { existsSync, unlink } from 'fs';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  // /auth/register\n  @Post('/register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  // /auth/login\n  @Post('/login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Profile data',\n    type: ProfileDto,\n  })\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @Get('/profile')\n  async profile(@Req() req) {\n    const userId = req.user.id;\n    const profile = await this.authService.profile(userId);\n\n    return new ResponseFormatter(profile, 'Profile data');\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n          description: 'Upload avatar JPEG, JPG, PNG',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/image',\n        filename: (req, file, cb) => {\n          const randomName = Math.random().toString(36).substring(7);\n          const originalName = file.originalname;\n          const extension = originalName.substring(\n            originalName.lastIndexOf('.'),\n          );\n          const fileName = randomName + extension;\n          cb(null, fileName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (\n          file.mimetype === 'image/jpeg' ||\n          file.mimetype === 'image/png' ||\n          file.mimetype === 'image/jpg'\n        ) {\n          cb(null, true);\n        } else {\n          cb(\n            new BadRequestException(\n              'File type not supported, File Only Support JPG, JPEG, PNG',\n            ),\n            false,\n          );\n        }\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 2, // 2MB\n      },\n    }),\n  )\n  @Post('/avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    const userId = req.user.id;\n    const nameFolder = '/uploads/image/' + file.filename;\n\n    // Get the user's current avatar\n    const user = await this.authService.getUser(userId);\n\n    // If the user has an avatar and the file exists, delete it\n    if (user.avatar && existsSync('public' + user.avatar)) {\n      try {\n        await unlink('public' + user.avatar, (err) => {\n          if (err) {\n            console.error(`Failed to delete old avatar: ${err}`);\n          }\n        });\n      } catch (err) {\n        console.error(`Failed to delete old avatar: ${err}`);\n      }\n    }\n\n    const uploadAvatar = await this.authService.uploadAvatar(\n      userId,\n      nameFolder,\n    );\n\n    return new ResponseFormatter(uploadAvatar, 'Avatar updated');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthGuard.html":{"url":"classes/AuthGuard.html","title":"class - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PassportAuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, UnauthorizedException } from '@nestjs/common';\n\nimport { AuthGuard as PassportAuthGuard } from '@nestjs/passport';\n\nexport class AuthGuard extends PassportAuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { JwtStrategy } from './jwt.strategy';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserEntity]),\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:155\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Register\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserEntity } from './entities/user.entity';\nimport { Repository } from 'typeorm';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginDto } from './dto/login.dto';\nimport { jwt_config } from 'src/config/config_jwt';\nimport { unlink } from 'fs/promises';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserEntity)\n    private userRepository: Repository,\n\n    private jwtService: JwtService,\n  ) {}\n\n  async getUser(userId: number) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: userId,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return user;\n  }\n\n  /**\n   * Register\n   * @param data\n   * @returns\n   */\n  async register(data: RegisterDto) {\n    const checkUser = await this.userRepository.findOne({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (checkUser) {\n      throw new HttpException('User already exists', HttpStatus.FOUND);\n    }\n\n    data.password = await hash(data.password, 12);\n    const createUser = await this.userRepository.save({\n      ...data,\n    });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'User has been created',\n        data: createUser,\n      };\n    }\n  }\n\n  async login(data: LoginDto) {\n    const checkUser = await this.userRepository.findOne({\n      where: {\n        username: data.username,\n      },\n    });\n\n    if (!checkUser) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if (checkPassword) {\n      const accessToken = this.generateJWT({\n        sub: checkUser.id,\n        email: checkUser.email,\n        username: checkUser.username,\n      });\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Login success',\n        data: checkUser,\n        accessToken: accessToken,\n      };\n    } else {\n      throw new HttpException('Password not match', HttpStatus.UNAUTHORIZED);\n    }\n  }\n\n  async profile(user_id: number) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: user_id,\n      },\n      select: {\n        id: true,\n        username: true,\n        email: true,\n        avatar: true,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return user;\n  }\n\n  async uploadAvatar(user_id: number, avatar) {\n    const user = await this.userRepository.findOne({\n      where: {\n        id: user_id,\n      },\n    });\n\n    if (user) {\n      if (user.avatar) {\n        try {\n          await unlink(user.avatar);\n        } catch (err) {\n          console.error(`Failed to delete old avatar: ${err}`);\n        }\n      }\n\n      const updateAvatar = await this.userRepository.update(\n        {\n          id: user_id,\n        },\n        {\n          avatar: avatar,\n        },\n      );\n\n      if (!updateAvatar.affected) {\n        throw new HttpException(\n          'Failed to update avatar',\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        avatar: avatar,\n      };\n    } else {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n  }\n\n  generateJWT(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CreateCategoryDto})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCategoryDto\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CategoryDtoOut})@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: CategoryDtoOut})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Category data', type: UpdateCategoryDto})@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/categories/categories.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCategoryDto\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpStatus,\n} from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { CategoryDtoOut } from './dto/category.dto';\n\n@ApiTags('Category')\n@ApiBearerAuth('accessToken')\n@Controller('categories')\n@UseGuards(AuthGuard)\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CreateCategoryDto,\n  })\n  @Post()\n  async create(@Body() createCategoryDto: CreateCategoryDto) {\n    const category = await this.categoriesService.create(createCategoryDto);\n\n    return new ResponseFormatter(category, 'Category created');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CategoryDtoOut,\n  })\n  @Get()\n  async findAll() {\n    const categories = await this.categoriesService.findAll();\n\n    return new ResponseFormatter(categories, 'Categories found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: CategoryDtoOut,\n  })\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const category = await this.categoriesService.findOne(+id);\n\n    return new ResponseFormatter(category, 'Category found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Category data',\n    type: UpdateCategoryDto,\n  })\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ) {\n    const category = await this.categoriesService.update(\n      +id,\n      updateCategoryDto,\n    );\n\n    return new ResponseFormatter(category, 'Category updated');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const category = await this.categoriesService.remove(+id);\n\n    return new ResponseFormatter(category, 'Category deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService\n\nCategoriesService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/categories/categories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { CategoryEntity } from './entities/category.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([CategoryEntity])],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/categories/categories.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(categories_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(categories_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(categories_id: number, data: UpdateCategoryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/categories/categories.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categories_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateCategoryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CategoryEntity } from './entities/category.entity';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(\n    @InjectRepository(CategoryEntity)\n    private readonly categoryRepository: Repository,\n\n    // @Inject(REQUEST) private req: any,\n  ) {}\n\n  async create(data: CreateCategoryDto) {\n    const category = this.categoryRepository.create(data);\n\n    return await this.categoryRepository.save(category);\n  }\n\n  async findAll() {\n    const categories = await this.categoryRepository.find({\n      order: {\n        id: 'DESC',\n      },\n    });\n\n    return categories;\n  }\n\n  async findOne(categories_id: number) {\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    return category;\n  }\n\n  async update(categories_id: number, data: UpdateCategoryDto) {\n    const category = await this.categoryRepository.findOne({\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    Object.assign(category, data);\n\n    return await this.categoryRepository.save(category);\n  }\n\n  async remove(categories_id: number) {\n    const category = await this.categoryRepository.findOne({\n      withDeleted: true,\n      where: {\n        id: categories_id,\n      },\n    });\n\n    if (!category) {\n      throw new NotFoundException('Category not found');\n    }\n\n    return await this.categoryRepository.softRemove(category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDtoOut.html":{"url":"classes/CategoryDtoOut.html","title":"class - CategoryDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/category.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CategoryDtoOut {\n  @ApiPropertyOptional()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CategoryEntity.html":{"url":"entities/CategoryEntity.html","title":"entity - CategoryEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CategoryEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/entities/category.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                products\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, product => product.category)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/entities/category.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ProductEntity } from 'src/modules/products/entities/product.entity';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity('categories')\nexport class CategoryEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Column({ type: 'boolean', default: false })\n  status: boolean;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n\n  @OneToMany(() => ProductEntity, (product) => product.category)\n  products: ProductEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/categories/dto/create-category.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCategoryDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  status: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty()\n  stock: number;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  categoryId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/config_jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.sub,\n      username: payload.username,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/login.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty()\n  @IsString()\n  username: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(16)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDtoOut.html":{"url":"classes/ProductDtoOut.html","title":"class - ProductDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductDtoOut {\n  @ApiPropertyOptional()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  price: number;\n\n  @ApiProperty()\n  stock: number;\n\n  @ApiProperty()\n  status: boolean;\n\n  @ApiProperty()\n  categoryId: number;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductEntity.html":{"url":"entities/ProductEntity.html","title":"entity - ProductEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/entities/product.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                categoryId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                productImages\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, category => category.products)@JoinColumn({name: 'categoryId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'decimal', precision: 10, scale: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productImages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductImagesEntity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, image => image.product)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'boolean', default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'int'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProductImagesEntity } from './product-images.entity';\nimport { CategoryEntity } from 'src/modules/categories/entities/category.entity';\n\n@Entity('products')\nexport class ProductEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ unique: true })\n  name: string;\n\n  @Column({ nullable: true })\n  description: string;\n\n  @Column({ type: 'decimal', precision: 10, scale: 2 })\n  price: number;\n\n  @Column({ type: 'int' })\n  stock: number;\n\n  @Column({ type: 'boolean', default: false })\n  status: boolean;\n\n  @Column()\n  categoryId: number;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @DeleteDateColumn()\n  deletedAt?: Date;\n\n  @ManyToOne(() => CategoryEntity, (category) => category.products)\n  @JoinColumn({ name: 'categoryId' }) // Pastikan untuk menambahkan JoinColumn jika nama kolom tidak sesuai dengan konvensi\n  category: CategoryEntity;\n\n  @OneToMany(() => ProductImagesEntity, (image) => image.product)\n  productImages: ProductImagesEntity[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductImagesController.html":{"url":"controllers/ProductImagesController.html","title":"controller - ProductImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product-images/product-images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product/images\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                deleteProductImageById\n                            \n                            \n                                    \n                                    Async\n                                findAllProductImages\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                uploadProductImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteProductImageById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProductImageById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/delete')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllProductImages\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProductImages(filter: ProductImagesDtoOut)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductImagesDtoOut\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        uploadProductImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProductImage(file: Express.Multer.File, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post(':id/upload')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ProductImagesService } from './product-images.service';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from 'src/modules/auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport {\n  ProductImagesDtoIn,\n  ProductImagesDtoOut,\n} from '../dto/product-images.dto';\n\n@ApiTags('Product Images')\n@ApiBearerAuth('accessToken')\n@UseGuards(AuthGuard)\n@Controller('product/images')\nexport class ProductImagesController {\n  constructor(private readonly productImagesService: ProductImagesService) {}\n\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        images: {\n          type: 'string',\n          format: 'binary',\n          description: 'Upload images JPEG, JPG, PNG',\n        },\n      },\n    },\n  })\n  @UseInterceptors(\n    FileInterceptor('images', {\n      storage: diskStorage({\n        destination: 'public/uploads/product',\n        filename: (req, file, cb) => {\n          const randomName = Math.random().toString(36).substring(7);\n          const originalName = file.originalname;\n          const extension = originalName.substring(\n            originalName.lastIndexOf('.'),\n          );\n          const fileName = randomName + extension;\n          cb(null, fileName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (\n          file.mimetype === 'image/jpeg' ||\n          file.mimetype === 'image/png' ||\n          file.mimetype === 'image/jpg'\n        ) {\n          cb(null, true);\n        } else {\n          cb(\n            new BadRequestException(\n              'File type not supported, File Only Support JPG, JPEG, PNG',\n            ),\n            false,\n          );\n        }\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 2, // 2MB\n      },\n    }),\n  )\n  @Post(':id/upload') // Perhatikan bahwa Anda perlu menangkap id produk dari parameter rute\n  async uploadProductImage(\n    @UploadedFile() file: Express.Multer.File,\n    @Param('id') id: string,\n  ) {\n    if (!file) {\n      throw new BadRequestException('No file uploaded.');\n    }\n\n    const imagePath = `/uploads/product/${file.filename}`;\n\n    const dtoIn: ProductImagesDtoIn = {\n      product_id: +id,\n      image: imagePath,\n    };\n\n    const productImage =\n      await this.productImagesService.uploadProductImage(dtoIn);\n\n    return new ResponseFormatter(productImage, 'Product Image uploaded');\n  }\n\n  @Get(':id')\n  async findAllProductImages(@Query() filter: ProductImagesDtoOut) {\n    const productImages = await this.productImagesService.findAll(filter);\n    return new ResponseFormatter(productImages, 'Product images found');\n  }\n\n  @Delete(':id/delete')\n  async deleteProductImageById(@Param('id') id: string) {\n    const productImageId = +id;\n\n    try {\n      await this.productImagesService.deleteProductImageById(productImageId);\n      return 'Product image deleted';\n    } catch (error) {\n      console.error(`Error deleting product image: ${error.message}`);\n      throw new BadRequestException('Failed to delete product image.');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductImagesDtoIn.html":{"url":"classes/ProductImagesDtoIn.html","title":"class - ProductImagesDtoIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductImagesDtoIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product-images.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                product_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductImagesDtoOut {\n  @ApiPropertyOptional({ type: 'number' })\n  id: number;\n\n  @ApiPropertyOptional({ type: 'number' })\n  product_id: number;\n\n  @ApiPropertyOptional({ type: 'string' })\n  categoryName: string;\n}\n\nexport class ProductImagesDtoIn {\n  @ApiProperty()\n  product_id: number;\n\n  @ApiProperty()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductImagesDtoOut.html":{"url":"classes/ProductImagesDtoOut.html","title":"class - ProductImagesDtoOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductImagesDtoOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/product-images.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                categoryName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                product_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/product-images.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class ProductImagesDtoOut {\n  @ApiPropertyOptional({ type: 'number' })\n  id: number;\n\n  @ApiPropertyOptional({ type: 'number' })\n  product_id: number;\n\n  @ApiPropertyOptional({ type: 'string' })\n  categoryName: string;\n}\n\nexport class ProductImagesDtoIn {\n  @ApiProperty()\n  product_id: number;\n\n  @ApiProperty()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ProductImagesEntity.html":{"url":"entities/ProductImagesEntity.html","title":"entity - ProductImagesEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ProductImagesEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/entities/product-images.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                image\n                            \n                            \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                product_id\n                            \n                            \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, product => product.productImages)@JoinColumn({name: 'product_id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/entities/product-images.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinColumn,\n  ManyToOne,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ProductEntity } from './product.entity';\n\n@Entity('product_images')\nexport class ProductImagesEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  product_id: number;\n\n  @Column()\n  image: string;\n\n  @CreateDateColumn()\n  createdAt: Date;\n\n  @UpdateDateColumn()\n  updatedAt: Date;\n\n  @ManyToOne(() => ProductEntity, (product) => product.productImages)\n  @JoinColumn({ name: 'product_id' })\n  product: ProductEntity;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductImagesService.html":{"url":"injectables/ProductImagesService.html","title":"injectable - ProductImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product-images/product-images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteProductImageById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                uploadProductImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productImagesRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/product-images/product-images.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productImagesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteProductImageById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteProductImageById(productImageId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productImageId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(filter: ProductImagesDtoOut)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            ProductImagesDtoOut\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadProductImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadProductImage(dtoIn: ProductImagesDtoIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product-images/product-images.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dtoIn\n                                            \n                                                            ProductImagesDtoIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ProductImagesEntity } from '../entities/product-images.entity';\nimport { Repository } from 'typeorm';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport {\n  ProductImagesDtoIn,\n  ProductImagesDtoOut,\n} from '../dto/product-images.dto';\nimport { unlink } from 'fs';\n\n@Injectable()\nexport class ProductImagesService {\n  constructor(\n    @InjectRepository(ProductImagesEntity)\n    private readonly productImagesRepository: Repository,\n  ) {}\n\n  async uploadProductImage(dtoIn: ProductImagesDtoIn) {\n    try {\n      const newProductImage = this.productImagesRepository.create({\n        product_id: dtoIn.product_id,\n        image: dtoIn.image,\n      });\n\n      return await this.productImagesRepository.save(newProductImage);\n    } catch (error) {\n      throw new BadRequestException('Failed to upload product image.');\n    }\n  }\n\n  async findAll(filter: ProductImagesDtoOut) {\n    const productImages = await this.productImagesRepository\n      .createQueryBuilder('product_images')\n      .innerJoinAndSelect('product_images.product', 'product')\n      .innerJoinAndSelect('product.category', 'category')\n      .where('product.deletedAt IS NULL')\n      .andWhere('category.status = :status', { status: true })\n      .andWhere('product_images.id = :id OR :id IS NULL', { id: filter.id })\n      .andWhere(\n        'product_images.product_id = :product_id OR :product_id IS NULL',\n        {\n          product_id: filter.product_id,\n        },\n      )\n      .andWhere(\n        'LOWER(category.name) = LOWER(:categoryName) OR :categoryName IS NULL',\n        {\n          categoryName: filter.categoryName,\n        },\n      )\n      .getMany();\n\n    if (!productImages || productImages.length === 0) {\n      throw new NotFoundException('Product images not found.');\n    }\n\n    const images = productImages.map((image) => {\n      return {\n        id: image.id,\n        product_id: image.product_id,\n        image: image.image,\n        product: {\n          name: image.product.name,\n          status: image.product.status,\n          category: {\n            name: image.product.category.name,\n          },\n        },\n      };\n    });\n\n    return images;\n  }\n\n  async deleteProductImageById(productImageId: number): Promise {\n    const image = await this.productImagesRepository.findOne({\n      where: {\n        id: productImageId,\n      },\n    });\n\n    if (!image) {\n      throw new NotFoundException('Product image not found.');\n    }\n\n    try {\n      if (image.image) {\n        await unlink('public' + image.image, (err) => {\n          if (err) {\n            console.error(\n              `Failed to delete image file ${image.image}. Error: ${err.message}`,\n            );\n            throw new BadRequestException('Failed to delete product image.');\n          }\n        });\n      }\n    } catch (error) {\n      console.error(\n        `Failed to delete image file ${image.image}. Error: ${error.message}`,\n      );\n      throw new BadRequestException('Failed to delete product image.');\n    }\n\n    await this.productImagesRepository.remove(image);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiResponse({status: undefined, description: 'Product data', type: ProductDtoOut})@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/products.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpStatus,\n  NotFoundException,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '../auth/auth.guard';\nimport { ResponseFormatter } from 'src/config/response_formatter';\nimport { ProductDtoOut } from './dto/product.dto';\n\n@ApiTags('Product')\n@ApiBearerAuth('accessToken')\n@UseGuards(AuthGuard)\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  async create(@Body() createProductDto: CreateProductDto) {\n    const product = await this.productsService.create(createProductDto);\n\n    return new ResponseFormatter(product, 'Product created');\n  }\n\n  @Get()\n  async findAll() {\n    const products = await this.productsService.findAll();\n\n    if (!products) {\n      return new NotFoundException('Products not found');\n    }\n\n    return new ResponseFormatter(products, 'Products found');\n  }\n\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Product data',\n    type: ProductDtoOut,\n  })\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    const product = await this.productsService.findOne(+id);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product found');\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateProductDto: UpdateProductDto,\n  ) {\n    const product = await this.productsService.update(+id, updateProductDto);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product updated');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    const product = await this.productsService.remove(+id);\n\n    if (!product) {\n      return new NotFoundException('Product not found');\n    }\n\n    return new ResponseFormatter(product, 'Product deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductImagesService\n\nProductImagesService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductImagesService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductImagesService\n                        \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                        \n                            ProductImagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductEntity } from './entities/product.entity';\nimport { ProductImagesEntity } from './entities/product-images.entity';\nimport { ProductImagesService } from './product-images/product-images.service';\nimport { ProductImagesController } from './product-images/product-images.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([ProductEntity, ProductImagesEntity])],\n  controllers: [ProductsController, ProductImagesController],\n  providers: [ProductsService, ProductImagesService],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, data: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/products.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { ProductEntity } from './entities/product.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(ProductEntity)\n    private readonly productRepository: Repository,\n    // @Inject(REQUEST) private req: any,\n  ) {}\n\n  async create(data: CreateProductDto) {\n    const product = this.productRepository.create(data);\n\n    return await this.productRepository.save(product);\n  }\n\n  async findAll() {\n    const products = await this.productRepository.find({\n      where: {\n        deletedAt: null,\n        category: {\n          status: true,\n        },\n      },\n      order: {\n        id: 'DESC',\n      },\n      relations: ['category', 'productImages'],\n      select: {\n        id: true,\n        name: true,\n        price: true,\n        stock: true,\n        category: {\n          name: true,\n          status: true,\n        },\n        productImages: {\n          image: true,\n        },\n      },\n    });\n\n    if (!products) {\n      throw new NotFoundException('Products not found');\n    }\n\n    return products;\n  }\n\n  async findOne(id: number) {\n    const product = await this.productRepository.findOne({\n      where: {\n        id: id,\n        deletedAt: null,\n        category: {\n          status: true,\n        },\n      },\n      order: {\n        id: 'DESC',\n      },\n      relations: ['category', 'productImages'],\n      select: {\n        id: true,\n        name: true,\n        price: true,\n        stock: true,\n        category: {\n          name: true,\n          status: true,\n        },\n        productImages: {\n          image: true,\n        },\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    return product;\n  }\n\n  async update(id: number, data: UpdateProductDto) {\n    const product = await this.productRepository.findOne({\n      where: {\n        id: id,\n        deletedAt: null,\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    Object.assign(product, data);\n\n    const updatedProduct = await this.productRepository.save(product);\n\n    return updatedProduct;\n  }\n\n  async remove(id: number) {\n    const product = await this.productRepository.findOne({\n      withDeleted: true,\n      where: {\n        id: id,\n      },\n    });\n\n    if (!product) {\n      throw new NotFoundException('Product not found');\n    }\n\n    const deletedProduct = await this.productRepository.softRemove(product);\n\n    return deletedProduct;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileDto.html":{"url":"classes/ProfileDto.html","title":"class - ProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/profile.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n// Gunakan decorator ApiPropertyOptional untuk mendokumentasikan tipe Task sebagai array\nexport class ProfileDto {\n  @ApiProperty()\n  id: number;\n\n  @ApiProperty()\n  name: string;\n\n  @ApiProperty()\n  email: string;\n\n  @ApiProperty()\n  avatar?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@MinLength(8)@MaxLength(16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @MaxLength(16)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseFormatter.html":{"url":"classes/ResponseFormatter.html","title":"class - ResponseFormatter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseFormatter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/response_formatter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                message\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatError\n                            \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, message: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/config/response_formatter.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : HttpStatus.OK\n                    \n                \n                    \n                        \n                                Defined in src/config/response_formatter.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatError\n                        \n                    \n                \n            \n            \n                \nformatError(message: string, statusCode: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                statusCode\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    HttpStatus.INTERNAL_SERVER_ERROR\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     this\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/config/response_formatter.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: string; statusCode: number; data: any; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nexport class ResponseFormatter {\n  constructor(\n    public data: any = null,\n    public message: string,\n    public statusCode: number = HttpStatus.OK,\n  ) {}\n\n  formatError(\n    message: string,\n    statusCode: number = HttpStatus.INTERNAL_SERVER_ERROR,\n  ) {\n    this.data = null;\n    this.message = message;\n    this.statusCode = statusCode;\n    return this;\n  }\n\n  toJSON() {\n    return {\n      message: this.message,\n      statusCode: this.statusCode,\n      data: this.data,\n    };\n  }\n}\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      exception instanceof HttpException\n        ? exception.getResponse().toString()\n        : 'Internal server error';\n\n    const formattedResponse = new ResponseFormatter(\n      null,\n      message,\n      status,\n    ).formatError(message, status);\n\n    response.status(status).json(formattedResponse);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/categories/dto/update-category.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateCategoryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserEntity.html":{"url":"entities/UserEntity.html","title":"entity - UserEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                avatar\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity('users')\nexport class UserEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  username: string;\n\n  @Column({ unique: true })\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column({ nullable: true })\n  avatar?: string;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  createdAt: Date;\n\n  @Column({ type: 'timestamp', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/config_jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ormconfig.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/response_formatter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/response_formatter.ts\n            \n            class\n            ResponseFormatter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.guard.ts\n            \n            class\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/profile.dto.ts\n            \n            class\n            ProfileDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/entities/user.entity.ts\n            \n            entity\n            UserEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/category.dto.ts\n            \n            class\n            CategoryDtoOut\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/categories/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/categories/entities/category.entity.ts\n            \n            entity\n            CategoryEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product-images.dto.ts\n            \n            class\n            ProductImagesDtoIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product-images.dto.ts\n            \n            class\n            ProductImagesDtoOut\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/dto/product.dto.ts\n            \n            class\n            ProductDtoOut\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/products/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/entities/product-images.entity.ts\n            \n            entity\n            ProductImagesEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/entities/product.entity.ts\n            \n            entity\n            ProductEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/products/product-images/product-images.controller.ts\n            \n            controller\n            ProductImagesController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/product-images/product-images.service.ts\n            \n            injectable\n            ProductImagesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.2\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.2\n        \n            @nestjs/swagger : ^7.3.1\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.11.5\n        \n            pgsql : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nProductImagesService\n\nProductImagesService\n\nProductsModule -->\n\nProductImagesService->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../ormconfig.ts)\n                        \n                        \n                            jwt_config   (src/.../config_jwt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/ormconfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type:\n    process.env.DB_CONNECTION === 'postgres'\n      ? 'postgres'\n      : 'postgres' || 'postgres',\n  host: process.env.DB_HOST,\n  port: Number(process.env.DB_PORT) || 5432,\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_DATABASE,\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  synchronize: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/config/config_jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'abcdefghij',\n  // expired: 3600\n  expired: 10000,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
